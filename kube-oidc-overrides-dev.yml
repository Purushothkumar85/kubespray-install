###########
### Dex ###
###########
dex:
  enabled: true

  # Dex configuration
  # See https://github.com/coreos/dex/tree/master/Documentation
  config:
    issuer: https://dex.kumulus.co/dex
    connectors:
      - type: github
        # Required field for connector id.
        id: github
        # Required field for connector name.
        name: GitHub
        config:
          # Credentials can be string literals or pulled from the environment.
          clientID: $GITHUB_CLIENT_ID
          clientSecret: $GITHUB_CLIENT_SECRET
          redirectURI: https://loginapp.kumulus.co/callback
          
          # Optional organizations and teams, communicated through the "groups" scope.
          #
          # NOTE: This is an EXPERIMENTAL config option and will likely change.
          #
          # Legacy 'org' field. 'org' and 'orgs' cannot be used simultaneously. A user
          # MUST be a member of the following org to authenticate with dex.
          # org: my-organization
          #
          # Dex queries the following organizations for group information if the
          # "groups" scope is provided. Group claims are formatted as "(org):(team)".
          # For example if a user is part of the "engineering" team of the "coreos"
          # org, the group claim would include "coreos:engineering".
          #
          # If orgs are specified in the config then user MUST be a member of at least one of the specified orgs to
          # authenticate with dex.
          #
          # If neither 'org' nor 'orgs' are specified in the config and 'loadAllGroups' setting set to true then user
          # authenticate with ALL user's Github groups. Typical use case for this setup:
          # provide read-only access to everyone and give full permissions if user has 'my-organization:admins-team' group claim.  
          orgs:
          - name: kumulus-technologies
            teams:
            - developers
          # Flag which indicates that all user groups and teams should be loaded.
          loadAllGroups: false

          # Optional choice between 'name' (default), 'slug', or 'both'.
          #
          # As an example, group claims for member of 'Site Reliability Engineers' in
          # Acme organization would yield:
          #   - ['acme:Site Reliability Engineers'] for 'name'
          #   - ['acme:site-reliability-engineers'] for 'slug'
          #   - ['acme:Site Reliability Engineers', 'acme:site-reliability-engineers'] for 'both'
          teamNameField: slug
          # flag which will switch from using the internal GitHub id to the users handle (@mention) as the user id.
          # It is possible for a user to change their own user name but it is very rare for them to do so
          useLoginAsID: false

################
### Loginapp ###
################
loginapp:
  enabled: true
  # Ingress
  ingress:
    enabled: true
    hosts:
      - loginapp.kumulus.co
    tls:
      - secretName: loginapp-example-tls
        hosts:
          - loginapp.kumulus.co
          
  # Loginapp configuration
  # see: https://github.com/fydrah/loginapp#configuration
  config:
    name: "Login Application"
    listen: "0.0.0.0:5555"
    oidc:
      client:
        id: "loginapp"
        secret: ZXhhbXBsZS1hcHAtc2VjcmV0
        redirect_url: "https://loginapp.kumulus.co/callback"
      issuer:
        root_ca: "/etc/ssl/ca.pem"
        url: "https://dex.kumulus.co/dex"
    # Tls support
    tls:
      # Enable tls termination
      # default: false
      enabled: true
      # Certificate location
      # default: mandatory if tls.enabled is true
      cert: /etc/ssl/cert.pem
      # Key location
      # default: mandatory if tls.enabled is true
      key: /etc/ssl/key.pem

# Issuer certificate authority
  issuerCA:  |
     -----BEGIN CERTIFICATE-----
     ...
     -----END CERTIFICATE----- 
